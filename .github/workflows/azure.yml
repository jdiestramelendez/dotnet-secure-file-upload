# Continuous Integration Workflow, will build applications, publish artifacts and deploy to Azure
name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on: [push]

env:
  LOCATION: "eastus"
  RESOURCE_GROUP: "sfudemo"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Upload Artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: arm_template
        path: src\SecureFileUpload\Environment\azuredeploy.json

    - name: Setup MSBuild Path
      uses: warrenbuckley/Setup-MSBuild@v1
       
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.2
     
    - name: Restore NuGet Packages
      run: nuget restore src/SecureFileUpload/SecureFileUpload.sln
 
    - name: Build and Publish Web App
      run: msbuild src/SecureFileUpload/SecureFileUpload/SecureFileUpload.csproj /p:Configuration=Release /p:DeployOnBuild=true
 
    - name: Upload Artifact Web App
      uses: actions/upload-artifact@v1.0.0
      with:
        name: web_app
        path: src\SecureFileUpload\SecureFileUpload\obj\Release\Package\SecureFileUpload.zip

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301

    - name: Publish Function app
      run: dotnet publish src/SecureFileUpload/SecureFileUploadService -c Release

    - name: Upload Artifact Function App
      uses: actions/upload-artifact@v1.0.0
      with:
        name: function_app
        path: src/SecureFileUpload/SecureFileUploadService/bin/Release/netcoreapp3.1/
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.0.5
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: artifacts
  
      - name: Azure Login
        uses: Azure/login@v1
        with:
          # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create Azure Resource Group
        uses: azure/CLI@v1
        with:
          inlineScript: az group create -g $RESOURCE_GROUP -l $LOCATION

      - name: Deploy ARM Template
        id: arm
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resourceGroupName: ${{ env.RESOURCE_GROUP }}
          template: artifacts/arm_template/azuredeploy.json
          parameters: cloudmersiveVirusScanApiKey=${{ secrets.CLOUDMERSIVEVIRUSSCANAPIKEY }}

      - name: Deploy Web App
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az webapp deployment source config-zip --name ${{ steps.arm.outputs.WebAppName }} --resource-group $RESOURCE_GROUP --src artifacts/web_app/SecureFileUpload.zip

      - name: Deploy Function App
        uses: Azure/functions-action@v1.1.5
        with:
          app-name: ${{ steps.arm.outputs.FunctionAppName }}
          # Path to package or folder. *.zip or a folder to deploy
          package: artifacts/function_app
